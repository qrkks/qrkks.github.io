<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Website Building Learning Journal - 杂项</title><link href="https://qrkks.github.io/" rel="alternate"></link><link href="https://qrkks.github.io/feeds/za-xiang.atom.xml" rel="self"></link><id>https://qrkks.github.io/</id><updated>2023-12-25T15:44:44+08:00</updated><entry><title>将pelican自动化部署到Github Pages的action文件</title><link href="https://qrkks.github.io/2023/12/25/deploy-pelican-to-github-pages.html" rel="alternate"></link><published>2023-12-25T14:44:07+08:00</published><updated>2023-12-25T15:44:44+08:00</updated><author><name></name></author><id>tag:qrkks.github.io,2023-12-25:/2023/12/25/deploy-pelican-to-github-pages.html</id><summary type="html">&lt;p&gt;本文展示了一个示例 Action 文件，其中包括从代码检出到构建和部署的所有步骤。此外，我们介绍了一些常用的 GitHub Actions 操作，如 'actions/checkout@v2' 和 'actions/setup-python@v2'，以及如何使用 'peaceiris/actions-gh-pages@v3' 操作将生成的网站发布到 GitHub Pages。这个文章帮助您轻松自动化部署 Pelican 网站并提高可访问性。&lt;/p&gt;</summary><content type="html">&lt;h2&gt;思路&lt;/h2&gt;
&lt;p&gt;将pelican项目push到github pages仓库main分支时，自动构建output文件夹到gh-pages分支(github默认优先检查ph-pages分支来生成网站)。&lt;/p&gt;
&lt;h2&gt;准备&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;设置好github pages，设置main，gh-pages两个分支。&lt;/li&gt;
&lt;li&gt;根目录&lt;code&gt;pip freeze &amp;gt; requirements.txt&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Action 文件&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;#&lt;span class="w"&gt; &lt;/span&gt;This&lt;span class="w"&gt; &lt;/span&gt;YAML&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;used&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;define&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;GitHub&lt;span class="w"&gt; &lt;/span&gt;Actions&lt;span class="w"&gt; &lt;/span&gt;workflow&lt;span class="w"&gt; &lt;/span&gt;for&lt;span class="w"&gt; &lt;/span&gt;deploying&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;Pelican&lt;span class="w"&gt; &lt;/span&gt;website&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;GitHub&lt;span class="w"&gt; &lt;/span&gt;Pages.
#&lt;span class="w"&gt; &lt;/span&gt;The&lt;span class="w"&gt; &lt;/span&gt;workflow&lt;span class="w"&gt; &lt;/span&gt;will&lt;span class="w"&gt; &lt;/span&gt;be&lt;span class="w"&gt; &lt;/span&gt;triggered&lt;span class="w"&gt; &lt;/span&gt;when&lt;span class="w"&gt; &lt;/span&gt;there&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;push&lt;span class="w"&gt; &lt;/span&gt;event&lt;span class="w"&gt; &lt;/span&gt;on&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;&amp;#39;main&amp;#39;&lt;span class="w"&gt; &lt;/span&gt;branch.

name:&lt;span class="w"&gt; &lt;/span&gt;Deploy&lt;span class="w"&gt; &lt;/span&gt;Pelican&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;GitHub&lt;span class="w"&gt; &lt;/span&gt;Pages

on:
&lt;span class="w"&gt;  &lt;/span&gt;push:
&lt;span class="w"&gt;    &lt;/span&gt;branches:
&lt;span class="w"&gt;      &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;main&lt;span class="w"&gt;  &lt;/span&gt;

jobs:
&lt;span class="w"&gt;  &lt;/span&gt;#&lt;span class="w"&gt; &lt;/span&gt;This&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;main&lt;span class="w"&gt; &lt;/span&gt;job&lt;span class="w"&gt; &lt;/span&gt;called&lt;span class="w"&gt; &lt;/span&gt;&amp;#39;deploy&amp;#39;.
&lt;span class="w"&gt;  &lt;/span&gt;deploy:
&lt;span class="w"&gt;    &lt;/span&gt;#&lt;span class="w"&gt; &lt;/span&gt;The&lt;span class="w"&gt; &lt;/span&gt;job&lt;span class="w"&gt; &lt;/span&gt;will&lt;span class="w"&gt; &lt;/span&gt;run&lt;span class="w"&gt; &lt;/span&gt;on&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;latest&lt;span class="w"&gt; &lt;/span&gt;version&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;Ubuntu.
&lt;span class="w"&gt;    &lt;/span&gt;runs-on:&lt;span class="w"&gt; &lt;/span&gt;ubuntu-latest
&lt;span class="w"&gt;    &lt;/span&gt;steps:
&lt;span class="w"&gt;      &lt;/span&gt;#&lt;span class="w"&gt; &lt;/span&gt;The&lt;span class="w"&gt; &lt;/span&gt;first&lt;span class="w"&gt; &lt;/span&gt;step&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;check&lt;span class="w"&gt; &lt;/span&gt;out&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;repository.
&lt;span class="w"&gt;      &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;name:&lt;span class="w"&gt; &lt;/span&gt;Checkout
&lt;span class="w"&gt;        &lt;/span&gt;uses:&lt;span class="w"&gt; &lt;/span&gt;actions/checkout@v2

&lt;span class="w"&gt;      &lt;/span&gt;#&lt;span class="w"&gt; &lt;/span&gt;The&lt;span class="w"&gt; &lt;/span&gt;second&lt;span class="w"&gt; &lt;/span&gt;step&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;set&lt;span class="w"&gt; &lt;/span&gt;up&lt;span class="w"&gt; &lt;/span&gt;Python.
&lt;span class="w"&gt;      &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;name:&lt;span class="w"&gt; &lt;/span&gt;Set&lt;span class="w"&gt; &lt;/span&gt;up&lt;span class="w"&gt; &lt;/span&gt;Python
&lt;span class="w"&gt;        &lt;/span&gt;uses:&lt;span class="w"&gt; &lt;/span&gt;actions/setup-python@v2
&lt;span class="w"&gt;        &lt;/span&gt;with:
&lt;span class="w"&gt;          &lt;/span&gt;python-version:&lt;span class="w"&gt; &lt;/span&gt;&amp;#39;3.11&amp;#39;

&lt;span class="w"&gt;      &lt;/span&gt;#&lt;span class="w"&gt; &lt;/span&gt;The&lt;span class="w"&gt; &lt;/span&gt;third&lt;span class="w"&gt; &lt;/span&gt;step&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;project&lt;span class="w"&gt; &lt;/span&gt;dependencies.
&lt;span class="w"&gt;      &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;name:&lt;span class="w"&gt; &lt;/span&gt;Install&lt;span class="w"&gt; &lt;/span&gt;dependencies
&lt;span class="w"&gt;        &lt;/span&gt;run:&lt;span class="w"&gt; &lt;/span&gt;|
&lt;span class="w"&gt;          &lt;/span&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="w"&gt; &lt;/span&gt;requirements.txt
&lt;span class="w"&gt;          &lt;/span&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;ghp-import

&lt;span class="w"&gt;      &lt;/span&gt;#&lt;span class="w"&gt; &lt;/span&gt;The&lt;span class="w"&gt; &lt;/span&gt;fourth&lt;span class="w"&gt; &lt;/span&gt;step&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;build&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;Pelican&lt;span class="w"&gt; &lt;/span&gt;website.
&lt;span class="w"&gt;      &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;name:&lt;span class="w"&gt; &lt;/span&gt;Build&lt;span class="w"&gt; &lt;/span&gt;with&lt;span class="w"&gt; &lt;/span&gt;Pelican
&lt;span class="w"&gt;        &lt;/span&gt;run:&lt;span class="w"&gt; &lt;/span&gt;pelican&lt;span class="w"&gt; &lt;/span&gt;content&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;output&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="w"&gt; &lt;/span&gt;publishconf.py
&lt;span class="w"&gt;        &lt;/span&gt;working-directory:&lt;span class="w"&gt; &lt;/span&gt;projects/tech

&lt;span class="w"&gt;      &lt;/span&gt;#&lt;span class="w"&gt; &lt;/span&gt;The&lt;span class="w"&gt; &lt;/span&gt;final&lt;span class="w"&gt; &lt;/span&gt;step&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;deploy&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;generated&lt;span class="w"&gt; &lt;/span&gt;website&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;GitHub&lt;span class="w"&gt; &lt;/span&gt;Pages&lt;span class="w"&gt; &lt;/span&gt;using&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;&amp;#39;peaceiris/actions-gh-pages&amp;#39;&lt;span class="w"&gt; &lt;/span&gt;action.
&lt;span class="w"&gt;      &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;name:&lt;span class="w"&gt; &lt;/span&gt;Deploy&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;GitHub&lt;span class="w"&gt; &lt;/span&gt;Pages
&lt;span class="w"&gt;        &lt;/span&gt;uses:&lt;span class="w"&gt; &lt;/span&gt;peaceiris/actions-gh-pages@v3
&lt;span class="w"&gt;        &lt;/span&gt;with:
&lt;span class="w"&gt;          &lt;/span&gt;github_token:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;secrets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GITHUB_TOKEN&lt;/span&gt; &lt;span class="cp"&gt;}&lt;/span&gt;}
&lt;span class="w"&gt;          &lt;/span&gt;publish_dir:&lt;span class="w"&gt; &lt;/span&gt;./projects/tech/output
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;actions/checkout@v2&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;actions/checkout@v2&lt;/code&gt; 是一个 GitHub Actions 中的一个预定义的操作（也称为 Action），用于将代码仓库检出到工作环境中。这个操作允许您在 GitHub Actions 工作流程中获取代码库的副本，以便在后续步骤中执行构建、测试、部署等操作。&lt;/p&gt;
&lt;p&gt;具体来说，&lt;code&gt;actions/checkout@v2&lt;/code&gt; 操作做了以下事情：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;克隆或检出您的代码仓库，将代码复制到工作目录中。&lt;/li&gt;
&lt;li&gt;设置工作目录以包含检出的代码，以便后续步骤可以在其中运行。&lt;/li&gt;
&lt;li&gt;可以配置以检出特定分支、标签或提交，或者使用默认设置来检出默认分支（通常是 "main" 或 "master"）。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;此操作是 GitHub Actions 社区维护的官方操作之一，通常用于设置工作流程以执行各种 CI/CD 任务。使用此操作可以使您的工作流程更容易编写和维护，因为它处理了代码检出的许多细节。&lt;/p&gt;
&lt;p&gt;要在 GitHub Actions 工作流程中使用 &lt;code&gt;actions/checkout@v2&lt;/code&gt; 操作，通常需要在 workflow 文件的步骤中添加一个名为 "Checkout"（或其他您喜欢的名称）的步骤，并指定使用 &lt;code&gt;actions/checkout@v2&lt;/code&gt; 操作。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;steps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Checkout code&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;actions/checkout@v2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这个步骤将在工作流中使用 &lt;code&gt;actions/checkout@v2&lt;/code&gt; 操作来检出代码。&lt;/p&gt;
&lt;h3&gt;actions/setup-python@v2&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;actions/setup-python@v2&lt;/code&gt; 是 GitHub Actions 中的一个官方操作，用于设置 Python 环境，以便您可以在 GitHub Actions 工作流程中执行 Python 相关的任务。它允许您指定要使用的 Python 版本，并设置 Python 环境的各种配置选项。&lt;/p&gt;
&lt;p&gt;具体来说，&lt;code&gt;actions/setup-python@v2&lt;/code&gt; 操作可以执行以下操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装指定版本的 Python 或 PyPy。您可以指定所需的 Python 版本，例如 Python 3.6、Python 3.7、Python 3.8 等等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置 PATH 环境变量，以便工作流程中的后续步骤可以访问所安装的 Python 可执行文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可以选择安装 pip 包管理器，以便在工作流程中安装 Python 依赖项。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;支持各种操作系统，包括 Windows、Linux 和 macOS。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这个操作非常有用，因为它使得在 GitHub Actions 中设置 Python 环境变得简单，并且允许您轻松地切换和测试不同版本的 Python。您可以在工作流程中使用这个操作来执行各种 Python 相关的任务，例如运行测试、构建 Python 应用程序或执行其他与 Python 相关的操作。&lt;/p&gt;
&lt;p&gt;示例用法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Set up Python&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;actions/setup-python@v2&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;with&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;python-version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;3.8&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;# 指定要安装的 Python 版本&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;上述示例中，工作流程将设置 Python 3.8 环境以供后续步骤使用。您可以根据您的项目需求和 Python 版本要求来配置此操作。&lt;/p&gt;
&lt;h3&gt;peaceiris/actions-gh-pages@v3&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;peaceiris/actions-gh-pages@v3&lt;/code&gt; 是一个 GitHub Actions 的操作（Action），用于将静态网站或其他内容发布到 GitHub Pages。这个操作是由社区维护的，它简化了将内容发布到 GitHub Pages 的流程。&lt;/p&gt;
&lt;p&gt;具体来说，&lt;code&gt;peaceiris/actions-gh-pages&lt;/code&gt; 操作提供了以下功能：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;自动构建静态网站或其他内容：您可以配置操作来自动构建您的静态网站或其他内容，例如生成文档、编译应用程序等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将构建后的内容推送到 GitHub Pages 分支：操作会将构建后的内容推送到一个指定的 GitHub Pages 分支，通常是 &lt;code&gt;gh-pages&lt;/code&gt; 分支。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自动设置 GitHub Pages：操作还会自动设置 GitHub Pages，使您的网站或内容可以在 GitHub Pages 上在线访问。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;支持自定义配置：您可以根据需要自定义操作的行为，例如指定构建命令、指定发布的分支等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;GitHub Actions 的操作是用于自动化 CI/CD 流程的组件，您可以在 GitHub Actions 工作流程中使用它们。&lt;code&gt;peaceiris/actions-gh-pages&lt;/code&gt; 操作通常用于构建和发布静态网站，以便在 GitHub Pages 上托管。&lt;/p&gt;
&lt;p&gt;要了解如何在 GitHub Actions 中使用 &lt;code&gt;peaceiris/actions-gh-pages&lt;/code&gt; 操作，请查阅相关文档和示例。操作的版本号 &lt;code&gt;v3&lt;/code&gt; 表示操作的版本，通常建议使用最新版本以获得最新的功能和改进。&lt;/p&gt;
&lt;h2&gt;问题&lt;/h2&gt;
&lt;h3&gt;权限问题报错&lt;/h3&gt;
&lt;p&gt;解决方法：修改actions权限。&lt;/p&gt;
&lt;p&gt;参考：&lt;a href="https://stackoverflow.com/questions/76023778/action-failed-with-the-process-usr-bin-git-failed-with-exit-code-128"&gt;Action failed with "The process '/usr/bin/git' failed with exit code 128"&lt;/a&gt;&lt;/p&gt;</content><category term="杂项"></category></entry></feed>